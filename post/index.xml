<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Evan Edmond</title>
    <link>https://Craskermasker.github.io/post/</link>
      <atom:link href="https://Craskermasker.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 05 May 2025 21:20:58 +0100</lastBuildDate>
    <image>
      <url>https://Craskermasker.github.io/images/icon_hu52c3432a9714b9dff44576768deb52e5_42693_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://Craskermasker.github.io/post/</link>
    </image>
    
    <item>
      <title>ABN 2025 poster presentation</title>
      <link>https://Craskermasker.github.io/post/global-health-fellowship/</link>
      <pubDate>Mon, 05 May 2025 21:20:58 +0100</pubDate>
      <guid>https://Craskermasker.github.io/post/global-health-fellowship/</guid>
      <description>&lt;p&gt;Poster embedded here. 
&lt;a href=&#34;./poster.pdf&#34;&gt;PDF download link&lt;/a&gt;
Draft preprint 
&lt;a href=&#34;./preprint.pdf&#34;&gt;PDF download link&lt;/a&gt;
&lt;object data=&#34;./poster.pdf&#34; type=&#34;application/pdf&#34; width=&#34;75%&#34; height=&#34;800px&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wedding Website</title>
      <link>https://Craskermasker.github.io/post/decommission-wedding-website/</link>
      <pubDate>Wed, 28 Feb 2024 10:16:25 +0000</pubDate>
      <guid>https://Craskermasker.github.io/post/decommission-wedding-website/</guid>
      <description>&lt;p&gt;This is a landing page for my now decommissioned wedding website domain,
designed with the static site builder 
&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; and the 
&lt;a href=&#34;https://themes.gohugo.io/themes/hugo-story/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Story
theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a non-functioning version of the site with personal information removed
and form inactivated.&lt;/p&gt;
 &lt;iframe seamless=&#34;seamless&#34; src=&#34;./public/index.html&#34; title=&#34;description&#34; width=&#34;125%&#34; height=&#34;800px&#34;&gt;&lt;/iframe&gt; 
</description>
    </item>
    
    <item>
      <title>Converting Datasets with file_tree</title>
      <link>https://Craskermasker.github.io/post/converting-datasets-filetree-wip/</link>
      <pubDate>Tue, 26 Apr 2022 14:25:58 +0100</pubDate>
      <guid>https://Craskermasker.github.io/post/converting-datasets-filetree-wip/</guid>
      <description>&lt;p&gt;We often deal with structured imaging datasets, and understanding a different structure, or converting between them for data sharing or analysis can be tricky.
I recently did this for a consolidated analysis and found that Michiel Cottaar&amp;rsquo;s file_tree module took much of the hassle out.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;file_tree.convert&lt;/code&gt; function can also handle making symlinks to save space and keep source data folders clean, and overwriting prevous runs.
As an &lt;strong&gt;approach&lt;/strong&gt; I found this clear, flexible and powerful.&lt;/p&gt;
&lt;p&gt;This has now been incorporated in &lt;code&gt;file_tree&lt;/code&gt; (0.7.2 onwards) and a minimum working example is here:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://gitlab.com/evan.edmond/filetree-convert-demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gitlab.com/evan.edmond/filetree-convert-demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;First, we write a text file describing the structure of each dataset and the eventual desired target.&lt;/p&gt;
&lt;p&gt;dataset 1:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HV_{participant} (subj_dir)
  F3T_NNNN_NNN_{scancode} (scan_dir)
    images_{image_n}_boldmbep2d2mmMB6v2RS.nii.gz (func_data_unclassified)
    images_{image_n}_t1mprax1mmisowithNose32ch1001.nii.gz (T1w_unclassified)
    sbref.nii.gz (func_sbref)
    funcdata.nii.gz (func_data)
    T1w.nii.gz (T1w)
  twix_symlinks
    slsr_csi_mcycle_dw_{block_n}.dat (mrsi_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;dataset 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;raw_data
  C{participant} (subj_dir)
    T1.nii.gz (T1w)
    CSI
      slsr_csi_mcycle_dw_{block_n}.dat (mrsi_data)
    T1_dcm (T1w_dicom_dir)
    rest
      images_{image_n}_MB8FMRIfov21024mmresting.nii.gz (func_data_unclassified)
      sbref.nii.gz (func_sbref)
      funcdata.nii.gz (func_data)
      fmap_rest
        images_{image_n}_fieldmapgre2mmFoV216mm1001.nii.gz (fmap_mag)
        images_{image_n}_fieldmapgre2mmFoV216mm2001.nii.gz (fmap_phase)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;dataset 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;raw
  sub-{participant} (subj_dir)
    ses-placebo (ses_dir)
      anat
        sub-{participant}_ses-p_T1w.nii.gz (T1w)
      fmap
        sub-{participant}_ses-p_magnitude1.nii.gz (fmap_mag)
        sub-{participant}_ses-p_phasediff1.nii.gz (fmap_phase)
      func
        sub-{participant}_ses-p_task-{task}_bold.nii.gz (func_data)
        sub-{participant}_ses-p_task-{task}_sbref.nii.gz (func_sbref)
      mrsi
        sub-{participant}_ses-p_slsr_csi_mcycle_pre_{block_n}.dat (mrsi_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then a desired target dataset structure 
&lt;a href=&#34;https://bids-specification.readthedocs.io/en/stable/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BIDS&lt;/a&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rawdata
 sub-{participant} (input_subj_dir)
    anat (input_anat_dir)
      sub-{participant}_T1w.nii.gz (T1w)
      sub-{participant}_T1w_mask.nii.gz (hand_area)
      sub-{participant}_T1w_dicom (T1w_dicom_dir)
    fmap (input_fmap_dir)
      sub-{participant}_magnitude1.nii.gz (fmap_mag)
      sub-{participant}_phasediff1.nii.gz (fmap_phase)
    func (input_func_dir)
      sub-{participant}_task-{task}_bold.nii.gz (func_data)
      sub-{participant}_task-{task}_sbref.nii.gz (func_sbref)
    mrsi (input_mrsi_dir)
      sub-{participant}_vox-m1_csi_slaser_{block_n}.dat (mrsi_data)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conversion then can be done as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from file_tree import FileTree, convert

# Keys to convert (present in both trees)
keys = [&amp;quot;t1&amp;quot;, &amp;quot;rest&amp;quot;, &amp;quot;task&amp;quot;, &amp;quot;fmap1&amp;quot;, &amp;quot;fmap2&amp;quot;]

src_data = &amp;quot;src_data&amp;quot;       # Path to source data dir
target_data = &amp;quot;target_data&amp;quot; # Path to target data dir
stree = &amp;quot;src.tree&amp;quot;          # Path to source tree file
ttree = &amp;quot;target.tree&amp;quot;       # Path to target tree file


src_read = FileTree.read(stree, src_data).update_glob(keys)
target_read = FileTree.read(ttree, target_data)

convert(src_read, target_read, keys, symlink=True)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://Craskermasker.github.io/post/hello-world/</link>
      <pubDate>Tue, 30 Jun 2020 18:42:17 +0100</pubDate>
      <guid>https://Craskermasker.github.io/post/hello-world/</guid>
      <description>&lt;p&gt;This was surprisingly easy to set up! The guide to getting started here is excellent:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sourcethemes.com/academic/docs/install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Deployment is done using Github Pages, and I got a custom domain name for this - setting up DNS forwarding was the most difficult part but worked on following the guide here:&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.com/@hossainkhan/using-custom-domain-for-github-pages-86b303d3918a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/@hossainkhan/using-custom-domain-for-github-pages-86b303d3918a&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
